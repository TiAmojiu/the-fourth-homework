import java.io.IOException;
import java.io.InputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
    public static void main(String[] args) throws IOException {

        // 1、创建客户端对象
        ServerSocket ss = new ServerSocket(10002);

        // 2、获取连接过来的客户端对象
        Socket s = ss.accept();

        String ip = s.getInetAddress().getHostAddress();

        // 3、通过 Socket 对象获取输入流，读取客户端发来的数据
        InputStream in = s.getInputStream();

        byte[] buf = new byte[1024];

        int len = in.read(buf);
        String text = new String(buf, 0, len);
        System.out.println(ip + ":" + text);

        // 4、关闭资源
        s.close();
        ss.close();
    }
}
import java.io.IOException;
import java.io.OutputStream;
import java.net.Socket;

public class Client {
    public static void main(String[] args) throws IOException {

        // 1、创建客户端的 Socket 服务
        Socket socket = new Socket("192.168.1.100", 10002);

        // 2、获取 Socket 流中输入流
        OutputStream out = socket.getOutputStream();

        // 3、使用输出流将指定的数据写出去
        out.write("TCP is coming !".getBytes());

        // 4、关闭 Socket 服务
        socket.close();
    }
}
/**
* 优化 TCP 传输的客户端
*/
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;

public class ClientUpdate {
    public static void main(String[] args) throws IOException {

        Socket socket = new Socket("192.168.1.100", 10002);

        OutputStream out = socket.getOutputStream();

        out.write("tcp!".getBytes());

        // 读取服务端返回的数据，使用 Socket 读取流
        InputStream in = socket.getInputStream();
        byte[] buf = new byte[1024];

        int len = in.read(buf);

        String text = new String(buf, 0, len);

        System.out.println(text);

        socket.close();
    }
}
/**
* 优化 TCP 传输的服务端
*/
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class ServerUpdate {
    public static void main(String[] args) throws IOException {

        // 1、创建服务端对象
        ServerSocket ss = new ServerSocket(10002);

        // 2、获取连接过来的客户端对象
        Socket s = ss.accept();  // accept 方式为阻塞式方法

        String ip = s.getInetAddress().getHostAddress();

        // 3、通过 Socket 对象获取输入流，要读取客户端发来的数据
        InputStream in = s.getInputStream();

        byte[] buf = new byte[1024];

        int len = in.read(buf);
        String text = new String(buf, 0, len);
        System.out.println(ip + ":" + text);

        // 使用客户端的 Socket 对象的输出流给客户端返回数据
        OutputStream out = s.getOutputStream();
        out.write("收到".getBytes());

        s.close();
        ss.close();
    }
}
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class TransClient {
    public static void main(String[] args) throws IOException {
        /**
         * 思路：创建客户端
         * 1、创建 Socket 客户端对象
         * 2、获取键盘录入的数据
         * 3、将录入的信息发送给 Socket 输出流
         * 4、读取服务端的数据并返回的大写数据
         */

        // 1、创建 Socket 客户端对象
        Socket s = new Socket("192.168.1.100", 10004);

        // 2、获取键盘录入
        BufferedReader bufr = new BufferedReader(new InputStreamReader(System.in));

        // 3、Socket 输出流
        PrintWriter out = new PrintWriter(s.getOutputStream(), true);

        // 4、Socket 输入流，读取服务端的数据并返回的大写数据
        BufferedReader bufIn = new BufferedReader(new InputStreamReader(s.getInputStream()));

        String line = null;

        while ((line = bufr.readLine()) != null) {

            if ("over".equals(line))
                break;
            out.println(line);

            // 读取服务端返回的一行大写数据
            String upperStr = bufIn.readLine();
            System.out.println(upperStr);
        }
        s.close();
    }
}
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class TransServer {
    public static void main(String[] args) throws IOException {
        /**
         * 思路：创建服务端
         * 1、创建 SeverSocket 客户端对象
         * 2、获取 Socket 流
         * 3、通过 Socket，读取客户端发过来的需要转换的数据
         * 4、显示在控制台上
         * 5、将数据转换成大写返回给客户端
         */

        // 1、创建 SeverSocket 对象
        ServerSocket ss = new ServerSocket(10004);

        // 2、获取 Socket 对象
        Socket s = ss.accept();

        // 获取 IP 地址
        String ip = s.getInetAddress().getHostAddress();
        System.out.println(ip + "......connected");

        // 3、获取 Socket 读取流，并装饰
        BufferedReader bufIn = new BufferedReader(new InputStreamReader(s.getInputStream()));

        // 4、获取 Socket 的输出流，并装饰
        PrintWriter out = new PrintWriter(s.getOutputStream(), true);

        String line = null;
        while ((line = bufIn.readLine()) != null) {
            System.out.println(line);
            out.println(line.toUpperCase());
        }

        s.close();
        ss.close();
    }
}